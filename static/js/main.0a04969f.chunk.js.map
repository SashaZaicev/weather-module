{"version":3,"sources":["components/header/HeaderContainer.tsx","components/footer/autor/AuthorSection.tsx","api/api.ts","store/appReducer/appReducer.ts","store/weatherReducer/weatherReducer.ts","store/store.ts","components/body/search/selectors/index.ts","components/body/search/SearchSection.tsx","components/footer/FooterContainer.tsx","components/body/result/infoCity/InfoCity.tsx","components/body/result/selectors/index.ts","components/body/result/ResultSection.tsx","components/body/BodyContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/body/search/searchSection.module.scss","components/body/result/infoCity/infoCity.module.scss","components/header/header.module.scss","components/footer/autor/autorSectionContainer.module.scss","components/footer/footerContainer.module.scss","components/body/bodyContainer.module.scss","components/body/result/resultSection.module.scss"],"names":["HeaderContainer","className","style","headerContainer","AuthorSection","authorSectionContainer","instance","axios","create","baseURL","weatherAPI","currentCity","get","then","res","data","initializeState","status","error","SET_STATUS","SET_ERROR","appAction","type","ADD_WEATHER_CITY","REMOVE_WEATHER_CITY","initialState","localStorage","JSON","parse","cityWeatherAction","cityInfo","id","rootReducer","combineReducers","weatherPage","state","action","some","city","name","filter","tl","appState","store","createStore","applyMiddleware","thunk","useTypedSelector","useSelector","selectorRequestStatus","selectorAppError","useStyles","makeStyles","main","borderRadius","root","borderBottomRightRadius","borderTopRightRadius","borderColor","SearchSection","classes","dispatch","useDispatch","getWeather","useCallback","event","preventDefault","currentTarget","value","catch","message","searchSection","onSubmit","TextField","InputProps","label","variant","placeholder","Button","color","preloader","CircularProgress","FooterContainer","footerContainer","InfoCity","React","memo","removeSearchCity","nameCity","sysCountry","sys","country","tempCity","temp","tempMin","temp_min","tempMax","temp_max","windSpeed","wind","speed","removeCity","weatherDescription","weather","map","weatherEl","index","icon","description","src","alt","infoCityContainer","firstRow","IconButton","onClick","Delete","selectorRequestCities","ResultSection","weatherCity","useState","setNameCity","useEffect","setItem","stringify","result","resultSection","BodyContainer","bodyContainer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0a04969f.chunk.js","sourcesContent":["import {FC} from 'react';\r\nimport style from './header.module.scss'\r\n\r\ntype HeaderContainerPropsType = {}\r\n\r\nexport const HeaderContainer: FC<HeaderContainerPropsType> = () => {\r\n  return (\r\n    <div className={style.headerContainer}>\r\n      <h3>Welcome to weather module</h3>\r\n    </div>\r\n  );\r\n};\r\n","import {FC} from 'react';\r\nimport style from './autorSectionContainer.module.scss'\r\n\r\ntype AuthorSectionPropsType = {}\r\n\r\nexport const AuthorSection: FC<AuthorSectionPropsType> = () => {\r\n  return (\r\n    <div className={style.authorSectionContainer}>\r\n      <p>Â© 2021 Aleksandr Zaytsev</p>\r\n    </div>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  // withCredentials: true,\r\n  baseURL: 'https://api.openweathermap.org/data/2.5/'\r\n})\r\nconst API_KEY = \"43d1cdf9188d6ec1a3cbed6392cda93c\"\r\nexport const weatherAPI = {\r\n  getWeather(currentCity: string) {\r\n    return instance.get(`weather?q=${currentCity}&appid=${API_KEY}&units=metric`)\r\n      .then((res) => {\r\n        return (res.data)\r\n      })\r\n  }\r\n}\r\n","type ActionsType =\n  ReturnType<typeof appAction.setAppError> |\n  ReturnType<typeof appAction.setAppStatus>\n\nexport type StatusType = 'idle' | 'loading' | 'success' | 'unsuccessful'\nlet initializeState = {\n  status: 'idle',\n  error: '',\n} as InitialStateType\nconst SET_STATUS = 'LAO/APP/SET_STATUS';\nconst SET_ERROR = 'LAO/APP/SET_ERROR'\nexport type InitialStateType = {\n  status: StatusType\n  error: string\n}\n\nexport const appReducer = (state: InitialStateType = initializeState, action: ActionsType): InitialStateType => {\n  switch (action.type) {\n    case SET_STATUS:\n      return {...state, status: action.status}\n    case SET_ERROR:\n      return {...state, error: action.error}\n    default:\n      return state;\n  }\n};\n\nexport const appAction = {\n  setAppStatus: (status: StatusType) => ({type: SET_STATUS, status} as const),\n  setAppError: (error: string) => ({type: SET_ERROR, error} as const)\n}\n","import {Dispatch} from \"redux\";\r\nimport {weatherAPI} from \"../../api/api\";\r\nimport {CityType} from \"../types\";\r\nimport {appAction} from \"../appReducer/appReducer\";\r\n\r\nconst ADD_WEATHER_CITY = 'ADD-WEATHER-CITY'\r\nconst REMOVE_WEATHER_CITY = 'REMOVE-WEATHER-CITY'\r\n\r\nconst initialState: Array<CityType> = localStorage['weatherCity']\r\n  ? JSON.parse(localStorage['weatherCity']) || [] : []\r\nexport type InitStateType = typeof initialState;\r\nexport type AddTableType = ReturnType<typeof cityWeatherAction.addWeatherCityAC>;\r\nexport type RemoveTableType = ReturnType<typeof cityWeatherAction.removeSearchCityAC>;\r\nexport type ActionsType = AddTableType & RemoveTableType;\r\n\r\nexport const weatherReducer = (\r\n  state = initialState, action: ActionsType): InitStateType => {\r\n  switch (action.type) {\r\n    case ADD_WEATHER_CITY: {\r\n      if (state.some(city => city.name === action.cityInfo.name)) {\r\n        return state;\r\n      } else return [{...action.cityInfo}, ...state]\r\n    }\r\n    case REMOVE_WEATHER_CITY: {\r\n      return state.filter(tl => tl.id !== action.id)\r\n    }\r\n    default:\r\n      return [...state]\r\n  }\r\n};\r\nexport const cityWeatherAction = {\r\n  addWeatherCityAC: (cityInfo: CityType) => ({\r\n    type: ADD_WEATHER_CITY, cityInfo\r\n  }),\r\n  removeSearchCityAC: (id: number) => ({\r\n    type: REMOVE_WEATHER_CITY, id\r\n  })\r\n}\r\nexport const getWeatherTC = (currentCity: string) => (\r\n  dispatch: Dispatch) => {\r\n  weatherAPI.getWeather(currentCity)\r\n    .then((city) => {\r\n      dispatch(cityWeatherAction.addWeatherCityAC(city))\r\n      dispatch(appAction.setAppStatus('success'));\r\n      dispatch(appAction.setAppError(''))\r\n    })\r\n    .catch((error) => {\r\n        dispatch(appAction.setAppError(error.message))\r\n        dispatch(appAction.setAppStatus('unsuccessful'));\r\n      }\r\n    )\r\n};\r\n","import {weatherReducer} from \"./weatherReducer\";\r\nimport {applyMiddleware, combineReducers, createStore, Store} from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport {TypedUseSelectorHook, useSelector} from \"react-redux\";\r\nimport {appReducer} from \"./appReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  weatherPage: weatherReducer,\r\n  appState: appReducer,\r\n});\r\n\r\nexport const store: Store<AppRootStateType> = createStore(\r\n  rootReducer, applyMiddleware(thunk)\r\n);\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\r\nexport const useTypedSelector: TypedUseSelectorHook<AppRootStateType> = useSelector\r\n","import {AppRootStateType} from \"../../../../store/store\";\r\n\r\nexport const selectorRequestStatus= (state: AppRootStateType) => state.appState.status\r\nexport const selectorAppError= (state: AppRootStateType) => state.appState.error\r\n","import React, {\r\n  FC, FormEvent,\r\n  useCallback,\r\n} from 'react';\r\nimport style from './searchSection.module.scss'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getWeatherTC} from \"../../../store/weatherReducer/weatherReducer\";\r\nimport {Button, CircularProgress, TextField} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {useTypedSelector} from \"../../../store/store\";\r\nimport {selectorAppError, selectorRequestStatus} from \"./selectors\";\r\nimport {appAction} from \"../../../store/appReducer/appReducer\";\r\n\r\ntype SearchSectionPropsType = {}\r\nconst useStyles = makeStyles({\r\n  main: {\r\n    borderRadius: `0 45px 45px 0`\r\n  },\r\n  root: {\r\n    borderBottomRightRadius: 0,\r\n    borderTopRightRadius: 0,\r\n    \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n      borderColor: \"#3f51b5\"\r\n    },\r\n  }\r\n})\r\nexport const SearchSection: FC<SearchSectionPropsType> = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch()\r\n  const status = useTypedSelector(selectorRequestStatus)\r\n  const error = useTypedSelector(selectorAppError)\r\n\r\n  const getWeather = useCallback(\r\n    (event: FormEvent<HTMLFormElement>) => {\r\n      dispatch(appAction.setAppStatus('loading'))\r\n      event.preventDefault();\r\n      const city = event.currentTarget.city.value\r\n      dispatch(getWeatherTC(city))\r\n      event.currentTarget.city.value = ''\r\n    }, [dispatch])\r\n\r\n  return (\r\n    <div className={style.searchSection}>\r\n      <form onSubmit={getWeather}>\r\n        <TextField\r\n          className={classes.root}\r\n          InputProps={{className: classes.root}}\r\n          id=\"outlined-basic\"\r\n          label=\"City\"\r\n          variant=\"outlined\"\r\n          name=\"city\"\r\n          placeholder=\"City\"/>\r\n        <Button className={classes.main}\r\n                type='submit'\r\n                variant=\"contained\"\r\n                color=\"primary\">\r\n          Check weather\r\n        </Button>\r\n      </form>\r\n      {status === 'loading' ?\r\n        <div className={style.preloader}>\r\n          <CircularProgress color=\"secondary\"/>\r\n        </div>\r\n        : <div className={style.error}>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n","import {FC} from 'react';\r\nimport {AuthorSection} from \"./autor\";\r\nimport style from './footerContainer.module.scss'\r\n\r\ntype FooterContainerPropsType = {}\r\n\r\nexport const FooterContainer: FC<FooterContainerPropsType> = () => {\r\n  return (\r\n    <div className={style.footerContainer}>\r\n      <AuthorSection/>\r\n    </div>\r\n  );\r\n};\r\n","import React, {FC, useCallback} from 'react';\r\nimport style from './infoCity.module.scss';\r\nimport {Delete} from '@material-ui/icons';\r\nimport {IconButton} from '@material-ui/core';\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {CityType, OneCity} from \"../../../../store/types\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  main: {\r\n    color: `#e96e50`,\r\n  }\r\n})\r\n\r\ntype InfoCityPropsType = {\r\n  city: CityType,\r\n  removeSearchCity: (cityId: number) => void\r\n}\r\n\r\nexport const InfoCity: FC<InfoCityPropsType> = React.memo(({\r\n                                                             city,\r\n                                                             removeSearchCity\r\n                                                           }) => {\r\n\r\n  const classes = useStyles();\r\n  const nameCity = city.name;\r\n  const sysCountry = city.sys.country;\r\n  const tempCity = city.main.temp;\r\n  const tempMin = city.main.temp_min;\r\n  const tempMax = city.main.temp_max;\r\n  const windSpeed = city.wind.speed;\r\n\r\n  const removeCity = useCallback(() => {\r\n    removeSearchCity(city.id)\r\n  }, []);\r\n  const weatherDescription = city.weather.map\r\n  ((weatherEl: OneCity, index: number) => {\r\n    const icon = \"http://openweathermap.org/img/w/\" + weatherEl.icon + \".png\"\r\n    return <div key={index} className={style.description}>\r\n      <span>{weatherEl.description}</span>\r\n      <img src={icon} alt=\"icon weather\"/></div>\r\n  })\r\n\r\n  return (\r\n    <div className={style.infoCityContainer}>\r\n      <div className={style.firstRow}> {nameCity},{sysCountry}\r\n        <IconButton\r\n          className={classes.main} style={{\r\n          \"padding\": \"0\"\r\n        }} onClick={removeCity}\r\n        >\r\n          <Delete style={{\r\n            \"width\": \"20px\",\r\n            \"height\": \"20px\"\r\n          }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <div>{weatherDescription}</div>\r\n      <div>Temperature : {tempCity} &#8451;</div>\r\n      <div>Wind speed: {windSpeed} m/s</div>\r\n      <div>Temp(min/max): ({tempMin}/{tempMax}) &#8451;</div>\r\n    </div>\r\n  );\r\n});\r\n","import {AppRootStateType} from \"../../../../store/store\";\r\n\r\nexport const selectorRequestCities= (state: AppRootStateType) => state.weatherPage\r\n","import {FC, useCallback, useEffect, useState} from 'react';\r\nimport style from \"./resultSection.module.scss\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useTypedSelector} from \"../../../store/store\";\r\nimport {InfoCity} from \"./infoCity\";\r\nimport {cityWeatherAction} from \"../../../store/weatherReducer/weatherReducer\";\r\nimport {CityType} from \"../../../store/types\";\r\nimport {selectorRequestCities} from \"./selectors\";\r\n\r\ntype ResultSectionPropsType = {}\r\n\r\nexport const ResultSection: FC<ResultSectionPropsType> = () => {\r\n  const dispatch = useDispatch()\r\n  const weatherCity = useTypedSelector<Array<CityType>>(selectorRequestCities)\r\n\r\n  const [nameCity, setNameCity] = useState<Array<CityType>>(\r\n    localStorage['weatherCity']\r\n      ? JSON.parse(localStorage['weatherCity']) || []\r\n      : []\r\n  )\r\n\r\n  const removeSearchCity = useCallback(function (id: number) {\r\n    const action = cityWeatherAction.removeSearchCityAC(id)\r\n    dispatch(action)\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('weatherCity', JSON.stringify(weatherCity))\r\n    setNameCity(weatherCity)\r\n  }, [weatherCity])\r\n\r\n  const result = nameCity && nameCity.map((city: CityType, index: number) =>\r\n    <InfoCity\r\n      removeSearchCity={removeSearchCity}\r\n      city={city}\r\n      key={index + city.name}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div className={style.resultSection}>\r\n      {result}\r\n    </div>\r\n  );\r\n};\r\n","import {FC} from 'react';\r\nimport style from './bodyContainer.module.scss'\r\nimport {SearchSection} from \"./search\";\r\nimport {ResultSection} from \"./result\";\r\n\r\ntype BodyContainerPropsType = {\r\n\r\n}\r\n\r\nexport const BodyContainer: FC<BodyContainerPropsType> = () => {\r\n\r\n  return (\r\n    <div className={style.bodyContainer}>\r\n      <SearchSection />\r\n      <ResultSection/>\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.scss\";\nimport {HeaderContainer} from \"./components\";\nimport {FooterContainer} from \"./components/footer\";\nimport {BodyContainer} from \"./components/body\";\n\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <HeaderContainer/>\n      <BodyContainer/>\n      <FooterContainer/>\n    </div>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchSection\":\"searchSection_searchSection__1QlWR\",\"preloader\":\"searchSection_preloader__vLCvM\",\"error\":\"searchSection_error__2Cibv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoCityContainer\":\"infoCity_infoCityContainer__3swed\",\"description\":\"infoCity_description__15bCC\",\"firstRow\":\"infoCity_firstRow__2Mj6c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"header_headerContainer__2UD2d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authorSectionContainer\":\"autorSectionContainer_authorSectionContainer__34_-i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerContainer\":\"footerContainer_footerContainer__2Px87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyContainer\":\"bodyContainer_bodyContainer__1dRKC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultSection\":\"resultSection_resultSection__mGNoO\"};"],"sourceRoot":""}